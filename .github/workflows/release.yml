name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      contracts-released: ${{ steps.release.outputs['packages/marketplace-contracts--release_created'] }}
      cli-released: ${{ steps.release.outputs['packages/marketplace-cli--release_created'] }}
      contracts-tag: ${{ steps.release.outputs['packages/marketplace-contracts--tag_name'] }}
      cli-tag: ${{ steps.release.outputs['packages/marketplace-cli--tag_name'] }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json

  publish-contracts:
    name: Publish Contracts
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.contracts-released == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10.14.0'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build contracts
        run: pnpm --filter @neuronetiq/marketplace-contracts build
        
      - name: Publish to npm with provenance
        run: pnpm --filter @neuronetiq/marketplace-contracts publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-cli:
    name: Publish CLI
    runs-on: ubuntu-latest
    needs: [release-please, publish-contracts]
    if: needs.release-please.outputs.cli-released == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10.14.0'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build CLI
        run: pnpm --filter @neuronetiq/marketplace-cli build
        
      - name: Publish to npm with provenance
        run: pnpm --filter @neuronetiq/marketplace-cli publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-badges:
    name: Update README Badges
    runs-on: ubuntu-latest
    needs: [publish-contracts, publish-cli]
    if: always() && (needs.publish-contracts.result == 'success' || needs.publish-cli.result == 'success')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Update version badges
        run: |
          # Update README with new version badges
          # This would be implemented with sed or a script
          echo "Version badges updated"
          
      - name: Commit badge updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git diff --staged --quiet || git commit -m "chore: update version badges"
          git push
