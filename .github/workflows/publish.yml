name: Publish

on:
  push:
    tags:
      - 'contracts-v*'
      - 'cli-v*'
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to publish'
        required: true
        type: choice
        options:
          - contracts
          - cli
      version:
        description: 'Version to publish'
        required: true
        type: string

jobs:
  publish-contracts:
    name: Publish Contracts
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/contracts-v') || (github.event.inputs.package == 'contracts')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10.14.0'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build contracts
        run: pnpm --filter @neuronetiq/marketplace-contracts build
        
      - name: Update version (manual)
        if: github.event.inputs.version
        run: |
          cd packages/marketplace-contracts
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          
      - name: Publish to npm
        run: pnpm --filter @neuronetiq/marketplace-contracts publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-cli:
    name: Publish CLI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/cli-v') || (github.event.inputs.package == 'cli')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10.14.0'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build contracts (dependency)
        run: pnpm --filter @neuronetiq/marketplace-contracts build
        
      - name: Build CLI
        run: pnpm --filter @neuronetiq/marketplace-cli build
        
      - name: Update version (manual)
        if: github.event.inputs.version
        run: |
          cd packages/marketplace-cli
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          
      - name: Publish to npm
        run: pnpm --filter @neuronetiq/marketplace-cli publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [publish-contracts, publish-cli]
    if: always() && (needs.publish-contracts.result == 'success' || needs.publish-cli.result == 'success')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Get package info
        id: package_info
        run: |
          if [[ "${{ github.ref }}" == refs/tags/contracts-v* ]]; then
            echo "package=contracts" >> $GITHUB_OUTPUT
            echo "version=${GITHUB_REF#refs/tags/contracts-v}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == refs/tags/cli-v* ]]; then
            echo "package=cli" >> $GITHUB_OUTPUT
            echo "version=${GITHUB_REF#refs/tags/cli-v}" >> $GITHUB_OUTPUT
          else
            echo "package=${{ github.event.inputs.package }}" >> $GITHUB_OUTPUT
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi
          
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package_info.outputs.package }}-v${{ steps.package_info.outputs.version }}
          release_name: ${{ steps.package_info.outputs.package }} v${{ steps.package_info.outputs.version }}
          body: |
            ## Changes
            
            - Published ${{ steps.package_info.outputs.package }} v${{ steps.package_info.outputs.version }} to npm
            
            ## Installation
            
            ```bash
            npm install -g @neuronetiq/marketplace-${{ steps.package_info.outputs.package }}@${{ steps.package_info.outputs.version }}
            ```
            
            ## Links
            
            - [npm package](https://www.npmjs.com/package/@neuronetiq/marketplace-${{ steps.package_info.outputs.package }})
            - [Documentation](https://github.com/neuronetiq/trader-marketplace#readme)
          draft: false
          prerelease: false
